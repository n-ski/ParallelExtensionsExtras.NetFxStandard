# Top-most EditorConfig file
root = true

# All files
[*]
charset = utf-8
indent_size = 4
indent_style = space
insert_final_newline = true
trim_trailing_whitespace = true

# XML project files
[*.{csproj,vbproj,vcxproj,vcxproj.filters,proj,projitems,shproj}]
indent_size = 2

# XML config files
[*.{props,targets,ruleset,config,nuspec,resx,vsixmanifest,vsct}]
indent_size = 2

# XAML files
[*.{xaml,axaml}]
indent_size = 2

# JSON files
[*.json]
indent_size = 2

# YAML files
[*.{yml,yaml}]
indent_size = 2

# C# files
[*.cs]
# Organize usings
dotnet_sort_system_directives_first = true
dotnet_separate_import_directive_groups = false

# this. preferences
dotnet_style_qualification_for_field = false:silent
dotnet_style_qualification_for_property = false:silent
dotnet_style_qualification_for_method = false:silent
dotnet_style_qualification_for_event = false:silent

# Language keywords vs BCL types preferences
dotnet_style_predefined_type_for_locals_parameters_members = true:silent
dotnet_style_predefined_type_for_member_access = true:silent

# Parentheses preferences
dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity:silent
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity:silent
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity:silent
dotnet_style_parentheses_in_other_operators = never_if_unnecessary:silent

# Modifier preferences
dotnet_style_require_accessibility_modifiers = for_non_interface_members:silent
dotnet_style_readonly_field = true:suggestion

# Expression-level preferences
dotnet_style_object_initializer = true:warning
dotnet_style_collection_initializer = true:suggestion
dotnet_style_explicit_tuple_names = true:suggestion
dotnet_style_null_propagation = true:suggestion
dotnet_style_coalesce_expression = true:suggestion
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:silent
dotnet_style_prefer_inferred_tuple_names = true:suggestion
dotnet_style_prefer_inferred_anonymous_type_member_names = true:suggestion
dotnet_style_prefer_auto_properties = true:silent
dotnet_style_prefer_conditional_expression_over_assignment = true:silent
dotnet_style_prefer_conditional_expression_over_return = true:silent

# var preferences
csharp_style_var_for_built_in_types = false:none
csharp_style_var_when_type_is_apparent = false:none
csharp_style_var_elsewhere = false:silent

# Expression-bodied members
csharp_style_expression_bodied_methods = false:silent
csharp_style_expression_bodied_constructors = false:silent
csharp_style_expression_bodied_operators = false:silent
csharp_style_expression_bodied_properties = true:silent
csharp_style_expression_bodied_indexers = true:silent
csharp_style_expression_bodied_accessors = true:silent

# Pattern matching preferences
csharp_style_pattern_matching_over_is_with_cast_check = true:suggestion
csharp_style_pattern_matching_over_as_with_null_check = true:suggestion

# Null-checking preferences
csharp_style_throw_expression = true:suggestion
csharp_style_conditional_delegate_call = true:suggestion

# Modifier preferences
csharp_preferred_modifier_order = public,private,protected,internal,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,volatile,async:suggestion

# Expression-level preferences
csharp_prefer_braces = true:silent
csharp_style_deconstructed_variable_declaration = true:suggestion
csharp_prefer_simple_default_expression = true:suggestion
csharp_style_pattern_local_over_anonymous_function = true:suggestion
csharp_style_inlined_variable_declaration = true:suggestion

# Namespace preferences
csharp_style_namespace_declarations = file_scoped:warning

# New line preferences
csharp_new_line_before_open_brace = all
csharp_new_line_before_else = true
csharp_new_line_before_catch = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_between_query_expression_clauses = true

# Indentation preferences
csharp_indent_case_contents = true
csharp_indent_case_contents_when_block = false
csharp_indent_switch_labels = true
csharp_indent_labels = flush_left

# Space preferences
csharp_space_after_cast = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_parentheses = false
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_around_binary_operators = before_and_after
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false

# Wrapping preferences
csharp_preserve_single_line_statements = true
csharp_preserve_single_line_blocks = true

#### Naming styles ####

# Naming rules

dotnet_naming_rule.interfaces.severity = warning
dotnet_naming_rule.interfaces.symbols = interface
dotnet_naming_rule.interfaces.style = IPascalCase

dotnet_naming_rule.type_parameters.severity = warning
dotnet_naming_rule.type_parameters.symbols = type_parameter
dotnet_naming_rule.type_parameters.style = TPascalCase

dotnet_naming_rule.types.severity = warning
dotnet_naming_rule.types.symbols = type
dotnet_naming_rule.types.style = PascalCase

dotnet_naming_rule.non_field_members.severity = warning
dotnet_naming_rule.non_field_members.symbols = non_field_member
dotnet_naming_rule.non_field_members.style = PascalCase

dotnet_naming_rule.private_or_internal_static_fields.severity = warning
dotnet_naming_rule.private_or_internal_static_fields.symbols = private_or_internal_static_field
dotnet_naming_rule.private_or_internal_static_fields.style = PascalCase

dotnet_naming_rule.const_fields.severity = warning
dotnet_naming_rule.const_fields.symbols = const_field
dotnet_naming_rule.const_fields.style = PascalCase

dotnet_naming_rule.non_private_fields.severity = warning
dotnet_naming_rule.non_private_fields.symbols = non_private_field
dotnet_naming_rule.non_private_fields.style = PascalCase

dotnet_naming_rule.private_fields.severity = warning
dotnet_naming_rule.private_fields.symbols = private_field
dotnet_naming_rule.private_fields.style = _camelCase

dotnet_naming_rule.locals_and_parameters.severity = warning
dotnet_naming_rule.locals_and_parameters.symbols = local_or_parameter
dotnet_naming_rule.locals_and_parameters.style = camelCase

# Symbol specifications

dotnet_naming_symbols.interface.applicable_kinds = interface
dotnet_naming_symbols.interface.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.interface.required_modifiers = 

dotnet_naming_symbols.private_or_internal_static_field.applicable_kinds = field
dotnet_naming_symbols.private_or_internal_static_field.applicable_accessibilities = internal, private, private_protected
dotnet_naming_symbols.private_or_internal_static_field.required_modifiers = static

dotnet_naming_symbols.type.applicable_kinds = class, struct, interface, enum
dotnet_naming_symbols.type.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.type.required_modifiers = 

dotnet_naming_symbols.non_field_member.applicable_kinds = property, event, method
dotnet_naming_symbols.non_field_member.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.non_field_member.required_modifiers = 

dotnet_naming_symbols.private_field.applicable_kinds = field
dotnet_naming_symbols.private_field.applicable_accessibilities = private
dotnet_naming_symbols.private_field.required_modifiers = 

dotnet_naming_symbols.non_private_field.applicable_kinds = field
dotnet_naming_symbols.non_private_field.applicable_accessibilities = public, internal, protected, protected_internal, private_protected
dotnet_naming_symbols.non_private_field.required_modifiers = 

dotnet_naming_symbols.type_parameter.applicable_kinds = type_parameter
dotnet_naming_symbols.type_parameter.applicable_accessibilities = *
dotnet_naming_symbols.type_parameter.required_modifiers = 

dotnet_naming_symbols.local_or_parameter.applicable_kinds = parameter, local
dotnet_naming_symbols.local_or_parameter.applicable_accessibilities = local
dotnet_naming_symbols.local_or_parameter.required_modifiers = 

dotnet_naming_symbols.const_field.applicable_kinds = field
dotnet_naming_symbols.const_field.applicable_accessibilities = 
dotnet_naming_symbols.const_field.required_modifiers = const

# Naming styles

dotnet_naming_style.PascalCase.required_prefix = 
dotnet_naming_style.PascalCase.required_suffix = 
dotnet_naming_style.PascalCase.word_separator = 
dotnet_naming_style.PascalCase.capitalization = pascal_case

dotnet_naming_style.IPascalCase.required_prefix = I
dotnet_naming_style.IPascalCase.required_suffix = 
dotnet_naming_style.IPascalCase.word_separator = 
dotnet_naming_style.IPascalCase.capitalization = pascal_case

dotnet_naming_style._camelCase.required_prefix = _
dotnet_naming_style._camelCase.required_suffix = 
dotnet_naming_style._camelCase.word_separator = 
dotnet_naming_style._camelCase.capitalization = camel_case

dotnet_naming_style.camelCase.required_prefix = 
dotnet_naming_style.camelCase.required_suffix = 
dotnet_naming_style.camelCase.word_separator = 
dotnet_naming_style.camelCase.capitalization = camel_case

dotnet_naming_style.TPascalCase.required_prefix = T
dotnet_naming_style.TPascalCase.required_suffix = 
dotnet_naming_style.TPascalCase.word_separator = 
dotnet_naming_style.TPascalCase.capitalization = pascal_case
